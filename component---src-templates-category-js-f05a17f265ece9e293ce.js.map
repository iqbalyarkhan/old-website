{"version":3,"sources":["webpack:///./src/templates/category.js","webpack:///./src/components/PostListing.js"],"names":["CategoryTemplate","data","pageContext","title","category","config","siteTitle","postEdges","allMarkdownRemark","edges","pageQuery","PostListing","postList","forEach","postEdge","push","path","node","fields","slug","tags","frontmatter","categories","extract","cover","date","excerpt","timeToRead","getPostList","className","styles","articleList","map","post","to","key","articleBox","right","meta","join"],"mappings":"2FAAA,4IAmBeA,UAZU,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,YAAT,OACvB,kBAAC,IAAD,KACE,8BACE,kBAAC,IAAD,CACEC,MAAK,KAAOD,EAAYE,SAAnB,OAAkCC,IAAOC,YAEhD,yCAAeJ,EAAYE,UAC3B,kBAAC,IAAD,CAAaG,UAAWN,EAAKO,kBAAkBC,WAQ9C,IAAMC,EAAS,Y,kCCtBtB,0DA2CeC,IAvCO,SAAC,GAAmB,IAAjBJ,EAAgB,EAAhBA,UAmBfK,EAlBc,WACpB,IAAMA,EAAW,GAcjB,OAbAL,EAAUM,SAAQ,SAAAC,GAChBF,EAASG,KAAK,CACZC,KAAMF,EAASG,KAAKC,OAAOC,KAC3BC,KAAMN,EAASG,KAAKI,YAAYD,KAChCE,WAAYR,EAASG,KAAKI,YAAYC,WACtCC,QAAST,EAASG,KAAKI,YAAYE,QACnCC,MAAOV,EAASG,KAAKI,YAAYG,MACjCrB,MAAOW,EAASG,KAAKI,YAAYlB,MACjCsB,KAAMX,EAASG,KAAKC,OAAOO,KAC3BC,QAASZ,EAASG,KAAKS,QACvBC,WAAYb,EAASG,KAAKU,gBAGvBf,EAGUgB,GACjB,OACE,yBAAKC,UAAWC,IAAOC,aAErBnB,EAASoB,KAAI,SAAAC,GAAI,OACf,kBAAC,OAAD,CAAMC,GAAID,EAAKjB,KAAMmB,IAAKF,EAAK9B,OAC7B,6BAAS0B,UAAWC,IAAOM,YACzB,yBAAKP,UAAWC,IAAOO,OACrB,4BAAKJ,EAAK9B,OACV,yBAAK0B,UAAWC,IAAOQ,MAAOL,EAAKR,KAAnC,OAAkD,8BAAOQ,EAAKX,WAAWiB,KAAK,QAA9E,OAAuGN,EAAKN,WAA5G,cACA,2BAAIM,EAAKV","file":"component---src-templates-category-js-f05a17f265ece9e293ce.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport Layout from '../layout'\nimport PostListing from '../components/PostListing'\nimport config from '../../data/SiteConfig'\n\nconst CategoryTemplate = ({ data, pageContext }) => (\n  <Layout>\n    <main>\n      <Helmet\n        title={` \"${pageContext.category}\" - ${config.siteTitle}`}\n      />\n      <h1>Category: {pageContext.category}</h1>\n      <PostListing postEdges={data.allMarkdownRemark.edges} />\n    </main>\n  </Layout>\n)\n\nexport default CategoryTemplate\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query CategoryPage($category: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [fields___date], order: DESC }\n      filter: { \n        frontmatter: { categories: { in: [$category] } },\n        fields: { draft: { eq: false } } \n      }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            date\n            categories\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styles from  './PostsListing.module.scss'\n\n  const PostListing = ({ postEdges }) => {\n    const getPostList = () => {\n    const postList = [];\n    postEdges.forEach(postEdge => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        categories: postEdge.node.frontmatter.categories,\n        extract: postEdge.node.frontmatter.extract,\n        cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.fields.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead\n      })\n    })\n    return postList;\n    }\n\n    const postList = getPostList();\n    return (\n      <div className={styles.articleList}>\n        {/* Your post list here. */\n        postList.map(post => (\n          <Link to={post.path} key={post.title}>\n            <article className={styles.articleBox}>\n              <div className={styles.right}>\n                <h2>{post.title}</h2>\n                <div className={styles.meta}>{post.date}  &mdash; <span>{post.categories.join(' / ')}</span>  &mdash; {post.timeToRead} Min Read </div>\n                <p>{post.extract}</p>\n              </div>\n            </article>\n          </Link>\n        ))}\n      </div>\n    )\n    \n  }\n\nexport default PostListing\n"],"sourceRoot":""}