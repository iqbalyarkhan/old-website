{"version":3,"sources":["webpack://iqbal-khan-blog/./src/components/PostListing.js","webpack://iqbal-khan-blog/./src/templates/tag.js"],"names":["postEdges","postList","forEach","postEdge","push","path","node","fields","slug","tags","frontmatter","categories","extract","thumbnail","cover","title","date","excerpt","timeToRead","getPostList","className","styles","map","post","Link","to","key","src","join","data","pageContext","tag","config","allMarkdownRemark","edges"],"mappings":"+LA6CA,EAzCsB,SAAC,GAAmB,IAAjBA,EAAgB,EAAhBA,UAoBfC,EAnBc,WACpB,IAAMA,EAAW,GAejB,OAdAD,EAAUE,SAAQ,SAAAC,GAChBF,EAASG,KAAK,CACZC,KAAMF,EAASG,KAAKC,OAAOC,KAC3BC,KAAMN,EAASG,KAAKI,YAAYD,KAChCE,WAAYR,EAASG,KAAKI,YAAYC,WACtCC,QAAST,EAASG,KAAKI,YAAYE,QACnCC,UAAWV,EAASG,KAAKI,YAAYG,UACrCC,MAAOX,EAASG,KAAKI,YAAYI,MACjCC,MAAOZ,EAASG,KAAKI,YAAYK,MACjCC,KAAMb,EAASG,KAAKC,OAAOS,KAC3BC,QAASd,EAASG,KAAKW,QACvBC,WAAYf,EAASG,KAAKY,gBAGvBjB,EAGUkB,GACjB,OACE,uBAAKC,UAAWC,uBAEdpB,EAASqB,KAAI,SAAAC,GAAI,OACf,gBAAC,EAAAC,KAAD,CAAMC,GAAIF,EAAKlB,KAAMqB,IAAKH,EAAKR,OAC7B,2BAASK,UAAWC,sBAClB,uBAAKD,UAAWC,iBACd,uBAAKM,IAAKJ,EAAKV,YACf,0BAAKU,EAAKR,OACV,uBAAKK,UAAWC,gBAAcE,EAAKP,KAAnC,OAAkD,4BAAOO,EAAKZ,WAAWiB,KAAK,SAC9E,yBAAIL,EAAKX,kB,wGCnBvB,UATkB,SAAC,GAAD,IAAGiB,EAAH,EAAGA,KAAMC,EAAT,EAASA,YAAT,OAClB,gBAAC,IAAD,KACE,4BACE,gBAAC,IAAD,CAAQf,MAAK,oBAAsBe,EAAYC,IAAlC,OAA4CC,gBACzD,gBAAC,IAAD,CAAahC,UAAW6B,EAAKI,kBAAkBC","file":"component---src-templates-tag-js-5a730181eb456e137d1a.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport styles from  './PostsListing.module.scss'\n\n  const PostListing = ({ postEdges }) => {\n    const getPostList = () => {\n    const postList = [];\n    postEdges.forEach(postEdge => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        categories: postEdge.node.frontmatter.categories,\n        extract: postEdge.node.frontmatter.extract,\n        thumbnail: postEdge.node.frontmatter.thumbnail,\n        cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.fields.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead\n      })\n    });\n    return postList;\n    };\n\n    const postList = getPostList();\n    return (\n      <div className={styles.articleList}>\n        {/* Your post list here. */\n        postList.map(post => (\n          <Link to={post.path} key={post.title}>\n            <article className={styles.articleBox}>\n              <div className={styles.right}>\n                <img src={post.thumbnail}/>\n                <h2>{post.title}</h2>\n                <div className={styles.meta}>{post.date}  &mdash; <span>{post.categories.join(' / ')}</span></div>\n                <p>{post.extract}</p>\n              </div>\n            </article>\n          </Link>\n        ))}\n      </div>\n    )\n    \n  };\n\nexport default PostListing\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport Layout from '../layout'\nimport PostListing from '../components/PostListing'\nimport config from '../../data/SiteConfig'\n\nconst TagTemplate = ({ data, pageContext }) => (\n  <Layout>\n    <main>         \n      <Helmet title={`Posts tagged as \"${pageContext.tag}\" | ${config.siteTitle}`} />\n      <PostListing postEdges={data.allMarkdownRemark.edges} />\n    </main>\n\n  </Layout> \n  );\n  export default TagTemplate\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query TagPage($tag: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [fields___date], order: DESC }\n      filter: { \n        frontmatter: { tags: { in: [$tag] } },\n        fields: { draft: { eq: false } } \n      \n      }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            date\n            categories\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}