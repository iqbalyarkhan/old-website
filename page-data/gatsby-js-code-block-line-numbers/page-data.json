{"componentChunkName":"component---src-templates-post-js","path":"/gatsby-js-code-block-line-numbers","result":{"data":{"markdownRemark":{"html":"<h3 id=\"introduction\"><a href=\"#introduction\" aria-label=\"introduction permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introduction</h3>\n<p>There are various methods to display code on one's blog. This post will discuss one such setup that would allow you to use code blocks and line numbers using <a href=\"https://www.gatsbyjs.org/\">GatsbyJS</a></p>\n<h3 id=\"setup\"><a href=\"#setup\" aria-label=\"setup permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Setup</h3>\n<p>Here are the steps you need to take to get code blocks to appear on your gatsby blog:</p>\n<p>First, install <a href=\"https://www.gatsbyjs.org/packages/gatsby-remark-prismjs/\">gatsby-remark-prismjs</a> by running this from within your gatsby project. </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save gatsby-transformer-remark gatsby-remark-prismjs prismjs</code></pre></div>\n<p>Once done, you should be able to see <code class=\"language-text\">prism-line-numbers.css</code> file located here in your project: <code class=\"language-text\">/node_modules/prismjs/plugins/line-numbers/</code>. This is as a result of the npm install we did above.</p>\n<p>Edit <code class=\"language-text\">prism-line-numbers.css</code> to include the following. This is to allow for line numbers and proper alignment:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token comment\">/**\n * If you only want to use line numbering\n */</span>\n\n<span class=\"token selector\">.gatsby-highlight</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> black<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 0.3em<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0.5em 0<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 1em<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 60%<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.gatsby-highlight:hover</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.gatsby-highlight pre[class*=\"language-\"].line-numbers</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">padding-left</span><span class=\"token punctuation\">:</span> 2.8em<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">overflow</span><span class=\"token punctuation\">:</span> initial<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">pre[class*=\"language-\"].line-numbers</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">padding-left</span><span class=\"token punctuation\">:</span> 3.8em<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">counter-reset</span><span class=\"token punctuation\">:</span> linenumber<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">pre[class*=\"language-\"].line-numbers > code</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">white-space</span><span class=\"token punctuation\">:</span> inherit<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.line-numbers .line-numbers-rows</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">pointer-events</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">left</span><span class=\"token punctuation\">:</span> -3.8em<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 3em<span class=\"token punctuation\">;</span> <span class=\"token comment\">/* works for line-numbers below 1000 lines */</span>\n\t<span class=\"token property\">letter-spacing</span><span class=\"token punctuation\">:</span> -1px<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">border-right</span><span class=\"token punctuation\">:</span> 1px solid #999<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token property\">-webkit-user-select</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">-moz-user-select</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">-ms-user-select</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">user-select</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.line-numbers-rows > span</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token property\">pointer-events</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">counter-increment</span><span class=\"token punctuation\">:</span> linenumber<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.line-numbers-rows > span:before</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token function\">counter</span><span class=\"token punctuation\">(</span>linenumber<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">padding-right</span><span class=\"token punctuation\">:</span> 0.8em<span class=\"token punctuation\">;</span>\n\t<span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> right<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Next, you need to add the following to your <code class=\"language-text\">gatsby-config.js</code> file. Make sure to add this to your plugins array:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber 0\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n    resolve<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">gatsby-transformer-remark</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n          resolve<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">gatsby-remark-prismjs</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n          options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// Class prefix for &lt;pre> tags containing syntax highlighting;</span>\n            <span class=\"token comment\">// defaults to 'language-' (eg &lt;pre class=\"language-js\">).</span>\n            <span class=\"token comment\">// If your site loads Prism into the browser at runtime,</span>\n            <span class=\"token comment\">// (eg for use with libraries like react-live),</span>\n            <span class=\"token comment\">// you may use this to prevent Prism from re-processing syntax.</span>\n            <span class=\"token comment\">// This is an uncommon use-case though;</span>\n            <span class=\"token comment\">// If you're unsure, it's best to use the default value.</span>\n            classPrefix<span class=\"token punctuation\">:</span> <span class=\"token string\">\"language-\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token comment\">// This is used to allow setting a language for inline code</span>\n            <span class=\"token comment\">// (i.e. single backticks) by creating a separator.</span>\n            <span class=\"token comment\">// This separator is a string and will do no white-space</span>\n            <span class=\"token comment\">// stripping.</span>\n            <span class=\"token comment\">// A suggested value for English speakers is the non-ascii</span>\n            <span class=\"token comment\">// character '›'.</span>\n            inlineCodeMarker<span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n            <span class=\"token comment\">// This lets you set up language aliases.  For example,</span>\n            <span class=\"token comment\">// setting this to '{ sh: \"bash\" }' will let you use</span>\n            <span class=\"token comment\">// the language \"sh\" which will highlight using the</span>\n            <span class=\"token comment\">// bash highlighter.</span>\n            aliases<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token comment\">// This toggles the display of line numbers globally alongside the code.</span>\n            <span class=\"token comment\">// To use it, add the following line in src/layouts/index.js</span>\n            <span class=\"token comment\">// right after importing the prism color scheme:</span>\n            <span class=\"token comment\">//  `require(\"prismjs/plugins/line-numbers/prism-line-numbers.css\");`</span>\n            <span class=\"token comment\">// Defaults to false.</span>\n            <span class=\"token comment\">// If you wish to only show line numbers on certain code blocks,</span>\n            <span class=\"token comment\">// leave false and use the {numberLines: true} syntax below</span>\n            showLineNumbers<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n            <span class=\"token comment\">// If setting this to true, the parser won't handle and highlight inline</span>\n            <span class=\"token comment\">// code used in markdown i.e. single backtick code like `this`.</span>\n            noInlineHighlight<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Next, check to see if you have a <code class=\"language-text\">gatsby-browser.js</code> file. If not, create it inside the root folder of your project (at the same level as your <code class=\"language-text\">gatsby-config.js</code> file). Add this to that file:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onClientEntry</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"prismjs/plugins/line-numbers/prism-line-numbers.css\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>We're now ready to use code blocks in our blog. To do so you'd have to use 3 back ticks at the start of your code block, choose the language you're about to enter (c++, js, css etc) and add the option of <code class=\"language-text\">{numberLines: true}</code> to show line numbers. Optionally, you can also give a starting line number if you don't want it to begin at line 1 by doing this: <code class=\"language-text\">{numberLines: 13}</code>.</p>\n<p>If you're interested, I'm using <a href=\"https://github.com/ocodia/okaidia-prismjs-theme/blob/master/okaidia.css\">prism-okadia</a> for this blog. You can find more prism themes <a href=\"https://github.com/PrismJS/prism-themes/tree/master/themes\">here</a>.</p>\n<p>Happy coding!</p>","timeToRead":3,"excerpt":"Introduction There are various methods to display code on one's blog. This post will discuss one such setup that would allow you to use code…","frontmatter":{"title":"Gatsby JS Code block Line Numbers","cover":"https://unsplash.it/400/300/?random?BoldMage","date":"2019-12-24T00:00:00.000Z","categories":["React"],"tags":["blog"]},"fields":{"slug":"/gatsby-js-code-block-line-numbers","date":"December 24, 2019"}}},"pageContext":{"slug":"/gatsby-js-code-block-line-numbers","nexttitle":"Gatsby JS Code block Line Numbers","nextslug":"/gatsby-js-code-block-line-numbers","prevtitle":"Gatsby JS Code block Line Numbers","prevslug":"/gatsby-js-code-block-line-numbers"}}}