{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/graph-ql-notes",
    "result": {"data":{"markdownRemark":{"html":"<ul>\n<li><a href=\"#introduction\">Introduction</a>\n<ul>\n<li><a href=\"#graphql-and-github\">GraphQL and Github</a></li>\n</ul>\n</li>\n<li><a href=\"#query\">Query</a>\n<ul>\n<li><a href=\"#fragments\">Fragments</a></li>\n<li><a href=\"#variables\">Variables</a></li>\n<li><a href=\"#default-variables\">Default Variables</a></li>\n<li><a href=\"#named-queries\">Named Queries</a></li>\n<li><a href=\"#nested-objects\">Nested Objects</a></li>\n<li><a href=\"#directives\">Directives</a></li>\n</ul>\n</li>\n<li><a href=\"#mutations\">Mutations</a></li>\n<li><a href=\"#pagination\">Pagination</a></li>\n</ul>\n<h2 id=\"introduction\" style=\"position:relative;\"><a href=\"#introduction\" aria-label=\"introduction permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introduction</h2>\n<p>GraphQL is a query language and server-side runtime for APIs that prioritizes giving clients exactly the data they request and no more. GraphQL is designed to make APIs fast, flexible, and developer-friendly. It can even be deployed within an IDE known as GraphiQL. As an alternative to REST, GraphQL lets developers construct requests that pull data from multiple data sources in a single API call.</p>\n<h3 id=\"graphql-and-github\" style=\"position:relative;\"><a href=\"#graphql-and-github\" aria-label=\"graphql and github permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GraphQL and Github</h3>\n<p>To get started, let's use Github's GraphQL API for which you need to generate a personal access token. The access token allows you to read and write data with your username.</p>\n<p>There are two common ways to interact with the GitHub GraphQL API:</p>\n<ul>\n<li>First, you can use <a href=\"https://docs.github.com/en/graphql/overview/explorer\">GitHub’s GraphQL Explorer</a>. You only need to sign up with your GitHub account to run GraphQL queries. This is what we'll be using.</li>\n<li>Second, you can use a generic client called <code class=\"language-cpptext\">GraphiQL</code>. It allows you to run GraphQL queries against your github account using the token you generated.</li>\n</ul>\n<h2 id=\"query\" style=\"position:relative;\"><a href=\"#query\" aria-label=\"query permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Query</h2>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-cppgraphql\"><code class=\"language-cppgraphql\"><span class=\"token comment\">#keyword</span>\n<span class=\"token keyword\">query</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">#object</span>\n  <span class=\"token object\">viewer</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">#field1</span>\n    <span class=\"token property\">login</span>\n    <span class=\"token comment\">#field2</span>\n    <span class=\"token property\">url</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>output:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-cppjson\"><code class=\"language-cppjson\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"data\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"viewer\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"login\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"iqbalyarkhan\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://github.com/iqbalyarkhan\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"avatarUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://xyz.com/u/123\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Example above starts with keyword <code class=\"language-cpptext\">query</code>. This is similar to <code class=\"language-cpptext\">select</code> statement in SQL. Inside the query, we provider the <code class=\"language-cpptext\">viewer</code> object that can be used to request data about the currently authorized user. Since you are authorized by your personal access token, it should show data about your account.</p>\n<p>The viewer is an <code class=\"language-cpptext\">object</code> in GraphQL terms. Objects hold data about an entity.</p>\n<p>This data is accessed using a so-called <code class=\"language-cpptext\">field</code> in GraphQL. Fields are used to ask for specific <code class=\"language-cpptext\">properties</code> in objects. For instance, the viewer object exposes a wide range of fields. Two fields for the object–name and url–were used in the query.</p>\n<p>To specify a GitHub organization, you can pass an <code class=\"language-cpptext\">argument</code> to fields. In the example below, I've provided <code class=\"language-cpptext\">login</code> as an argument:</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-cppgraphql\"><code class=\"language-cppgraphql\"><span class=\"token keyword\">query</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property-query\">organization</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">login</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"SMUCSEG2Consulting\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">name</span>\n    <span class=\"token property\">descriptionHTML</span>\n    <span class=\"token property\">url</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>output:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-cppjson\"><code class=\"language-cppjson\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"data\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"organization\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"SMUCSEG2Consulting\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"descriptionHTML\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;div>&lt;/div>\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://github.com/SMUCSEG2Consulting\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>What if you're part of 2 organizations? Simply add 2 queries right?</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-cppgraphql\"><code class=\"language-cppgraphql\"><span class=\"token keyword\">query</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property-query\">organization</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">login</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"SMUCSEG2Consulting\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">name</span>\n    <span class=\"token property\">descriptionHTML</span>\n    <span class=\"token property\">url</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token property-query\">organization</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">login</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"SMUCSE2341\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">name</span>\n    <span class=\"token property\">descriptionHTML</span>\n    <span class=\"token property\">url</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>output: You’d see an error such as <code class=\"language-cpptext\">Field 'organization' has an argument conflict</code>.</p>\n<p>That's because you're requesting 2 objects with the same structure. If you ever wanted to request data about two identical objects, you would have to use <code class=\"language-cpptext\">aliases</code> because GraphQL wouldn’t know how to resolve the two organization objects in a result. Here's how you'd do it. (Note the use of <code class=\"language-cpptext\">consulting</code> and <code class=\"language-cpptext\">teaching</code> as aliases):</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-cppgraphql\"><code class=\"language-cppgraphql\"><span class=\"token keyword\">query</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">consulting</span><span class=\"token punctuation\">:</span> <span class=\"token property-query\">organization</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">login</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"SMUCSEG2Consulting\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">name</span>\n    <span class=\"token property\">descriptionHTML</span>\n    <span class=\"token property\">url</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token attr-name\">teaching</span><span class=\"token punctuation\">:</span> <span class=\"token property-query\">organization</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">login</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"SMUCSE2341\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">name</span>\n    <span class=\"token property\">descriptionHTML</span>\n    <span class=\"token property\">url</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>output:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-cppjson\"><code class=\"language-cppjson\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"data\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"consulting\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"SMUCSEG2Consulting\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"descriptionHTML\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;div>&lt;/div>\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://github.com/SMUCSEG2Consulting\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"teaching\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"CS 2341 - Data Structures\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"descriptionHTML\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;div>Github Org for SMU's Data Structures Class&lt;/div>\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://github.com/SMUCSE2341\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"fragments\" style=\"position:relative;\"><a href=\"#fragments\" aria-label=\"fragments permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Fragments</h3>\n<p>Note how we repeated the same fields(name, descriptionHTML and url) over and over in the query above:</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-cppgraphql\"><code class=\"language-cppgraphql\"><span class=\"token keyword\">query</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">consulting</span><span class=\"token punctuation\">:</span> <span class=\"token property-query\">organization</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">login</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"SMUCSEG2Consulting\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">name</span>\n    <span class=\"token property\">descriptionHTML</span>\n    <span class=\"token property\">url</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token attr-name\">teaching</span><span class=\"token punctuation\">:</span> <span class=\"token property-query\">organization</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">login</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"SMUCSE2341\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">name</span>\n    <span class=\"token property\">descriptionHTML</span>\n    <span class=\"token property\">url</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>We can extract commonly used fields into something called a <code class=\"language-cpptext\">fragment</code>. Fragment specifies 2 pieces of information:</p>\n<ul>\n<li>What fields should form the query</li>\n<li>What type of object can the fragment be used on</li>\n</ul>\n<p>Here's how you define a fragment</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-cppgraphql\"><code class=\"language-cppgraphql\"><span class=\"token keyword\">fragment</span> <span class=\"token fragment function\">nameOfFragment</span> <span class=\"token keyword\">on</span> <span class=\"token object\">nameOfObject</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">field1</span>\n  <span class=\"token property\">field2</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now converting our 3 fields into a fragment we get:</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-cppgraphql\"><code class=\"language-cppgraphql\"><span class=\"token keyword\">fragment</span> <span class=\"token fragment function\">sharedOrgFields</span> <span class=\"token keyword\">on</span> <span class=\"token class-name\">Organization</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">name</span>\n  <span class=\"token property\">descriptionHTML</span>\n  <span class=\"token property\">url</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>We can now change our query to:</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-cppgraphql\"><code class=\"language-cppgraphql\"><span class=\"token keyword\">query</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">consulting</span><span class=\"token punctuation\">:</span> <span class=\"token property-query\">organization</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">login</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"SMUCSEG2Consulting\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span><span class=\"token fragment function\">sharedOrgFields</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token attr-name\">teaching</span><span class=\"token punctuation\">:</span> <span class=\"token property-query\">organization</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">login</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"SMUCSE2341\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span><span class=\"token fragment function\">sharedOrgFields</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">fragment</span> <span class=\"token fragment function\">sharedOrgFields</span> <span class=\"token keyword\">on</span> <span class=\"token class-name\">Organization</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">name</span>\n  <span class=\"token property\">descriptionHTML</span>\n  <span class=\"token property\">url</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"variables\" style=\"position:relative;\"><a href=\"#variables\" aria-label=\"variables permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Variables</h3>\n<p>In the previous queries, you provided arguments that identified an organization to your fields; but you <strong>inlined</strong> these arguments in your query. Think about a query like a function, where it’s important to provide dynamic arguments to it. That’s where the <code class=\"language-cpptext\">variable</code> in GraphQL comes in: it allows arguments to be extracted as variables from queries. Here’s how an organization’s login argument can be extracted to a dynamic variable (let's use a single organization for now):</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-cppgraphql\"><code class=\"language-cppgraphql\"><span class=\"token keyword\">query</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$organization</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span><span class=\"token operator\">!</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>We've provided name of the variable, <code class=\"language-cpptext\">organization</code>, to our query via the <code class=\"language-cpptext\">$</code> sign. We're also providing the <strong>type</strong> of variable which is <code class=\"language-cpptext\">String</code>. Exclamation point <code class=\"language-cpptext\">!</code> means that the argument is required.</p>\n<p>Here's the previous example in its entirety using variables (I removed the alias since there's only 1 org now):</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-cppgraphql\"><code class=\"language-cppgraphql\"><span class=\"token keyword\">query</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$organization</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span><span class=\"token operator\">!</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property-query\">organization</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">login</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$organization</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span><span class=\"token fragment function\">sharedOrgFields</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">fragment</span> <span class=\"token fragment function\">sharedOrgFields</span> <span class=\"token keyword\">on</span> <span class=\"token class-name\">Organization</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">name</span>\n  <span class=\"token property\">descriptionHTML</span>\n  <span class=\"token property\">url</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>To pass in the variables, you'd do so in the query variables section:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-cppjson\"><code class=\"language-cppjson\"><span class=\"token punctuation\">{</span> <span class=\"token property\">\"organization\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"SMUCSE2341\"</span> <span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"default-variables\" style=\"position:relative;\"><a href=\"#default-variables\" aria-label=\"default variables permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Default Variables</h3>\n<p>What if you have a field that can be provided in some cases and omitted in others? You can use a default variable. To do so, simply make the variable non-required (by removing exclamation) and provide a default value:</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-cppgraphql\"><code class=\"language-cppgraphql\"><span class=\"token keyword\">query</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$organization</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"SMUCSE2341\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property-query\">organization</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">login</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$organization</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span><span class=\"token fragment function\">sharedOrgFields</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">fragment</span> <span class=\"token fragment function\">sharedOrgFields</span> <span class=\"token keyword\">on</span> <span class=\"token class-name\">Organization</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">name</span>\n  <span class=\"token property\">descriptionHTML</span>\n  <span class=\"token property\">url</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"named-queries\" style=\"position:relative;\"><a href=\"#named-queries\" aria-label=\"named queries permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Named Queries</h3>\n<p>What if you had multiple queries? To keep things clean, we can also name our queries:</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-cppgraphql\"><code class=\"language-cppgraphql\"><span class=\"token keyword\">query</span> <span class=\"token definition-query function\">getOrgInfo</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$organization</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"SMUSCE2341\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property-query\">organization</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">login</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$organization</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span><span class=\"token fragment function\">sharedOrgFields</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">fragment</span> <span class=\"token fragment function\">sharedOrgFields</span> <span class=\"token keyword\">on</span> <span class=\"token class-name\">Organization</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">name</span>\n  <span class=\"token property\">descriptionHTML</span>\n  <span class=\"token property\">url</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"nested-objects\" style=\"position:relative;\"><a href=\"#nested-objects\" aria-label=\"nested objects permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Nested Objects</h3>\n<p>So far we've only looked at organization info. Let's find out the repos owned by an org. An org has another field called <code class=\"language-cpptext\">repository</code> that can disply info of the repo name passed in.</p>\n<p>Let's pass in the repo's name dynamically. Let's remove the default args and make org name and repo name required:</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-cppgraphql\"><code class=\"language-cppgraphql\"><span class=\"token keyword\">query</span> <span class=\"token definition-query function\">getOrgInfo</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$organization</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span><span class=\"token operator\">!</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$repository</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span><span class=\"token operator\">!</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property-query\">organization</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">login</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$organization</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span><span class=\"token fragment function\">sharedOrgFields</span>\n    <span class=\"token property-query\">repository</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">name</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$repository</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">name</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">fragment</span> <span class=\"token fragment function\">sharedOrgFields</span> <span class=\"token keyword\">on</span> <span class=\"token class-name\">Organization</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">name</span>\n  <span class=\"token property\">descriptionHTML</span>\n  <span class=\"token property\">url</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>with the following query variables:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-cppjson\"><code class=\"language-cppjson\"><span class=\"token punctuation\">{</span> <span class=\"token property\">\"organization\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"SMUCSE2341\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"repository\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Sprint4Headers\"</span> <span class=\"token punctuation\">}</span></code></pre></div>\n<p>will return this:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-cppjson\"><code class=\"language-cppjson\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"data\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"organization\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"CS 2341 - Data Structures\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"descriptionHTML\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;div>Github Org for SMU's Data Structures Class&lt;/div>\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://github.com/SMUCSE2341\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"repository\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Sprint4Headers\"</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"directives\" style=\"position:relative;\"><a href=\"#directives\" aria-label=\"directives permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Directives</h3>\n<p>A directive decorates part of a GraphQL schema or operation with additional configuration. Tools like Apollo Server (and Apollo Client) can read a GraphQL document's directives and perform custom logic as appropriate.</p>\n<p>Directives are preceded by the @ character, like so:</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-cppgraphql\"><code class=\"language-cppgraphql\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">ExampleType</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">oldField</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span> <span class=\"token directive function\">@deprecated</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">reason</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Use `newField`.\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token attr-name\">newField</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>This example shows the <code class=\"language-cpptext\">@deprecated</code> directive, which is a default directive (i.e., it's part of the GraphQL specification). It demonstrates the following about directives:</p>\n<ul>\n<li>Directives can take arguments of their own (reason in this case).</li>\n<li>Directives appear after the declaration of what they decorate (the <code class=\"language-cpptext\">oldField</code> field in this case)</li>\n</ul>\n<p>Let's use this directive concept with our repository. We'll pass a directive called <code class=\"language-cpptext\">withFork</code> that'll determine if we want to get the <code class=\"language-cpptext\">forkCount</code> for a particular repo. If it's true, we'll display this count, otherwise we won't.</p>\n<p>This line determines this logic inside the <code class=\"language-cpptext\">repository</code> object:</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-cppgraphql\"><code class=\"language-cppgraphql\"><span class=\"token property\">forkCount</span> <span class=\"token directive function\">@include</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">if</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$withFork</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>An example:</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-cppgraphql\"><code class=\"language-cppgraphql\"><span class=\"token keyword\">query</span> <span class=\"token definition-query function\">getOrganizationInfo</span><span class=\"token punctuation\">(</span>\n  <span class=\"token variable\">$organization</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span><span class=\"token operator\">!</span>\n  <span class=\"token variable\">$repository</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span><span class=\"token operator\">!</span>\n  <span class=\"token variable\">$withFork</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">Boolean</span><span class=\"token operator\">!</span>\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property-query\">organization</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">login</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$organization</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">name</span>\n    <span class=\"token property\">url</span>\n    <span class=\"token property\">descriptionHTML</span>\n    <span class=\"token property-query\">repository</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">name</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$repository</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">name</span>\n      <span class=\"token property\">forkCount</span> <span class=\"token directive function\">@include</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">if</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$withFork</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Here're the variables we provide to our query:</p>\n<p>with the following query variables:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-cppjson\"><code class=\"language-cppjson\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"organization\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"SMUCSE2341\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"repository\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Sprint4Headers\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"withFork\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Output:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-cppjson\"><code class=\"language-cppjson\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"data\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"organization\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"CS 2341 - Data Structures\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://github.com/SMUCSE2341\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"descriptionHTML\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;div>Github Org for SMU's Data Structures Class&lt;/div>\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"repository\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Sprint4Headers\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"forkCount\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"mutations\" style=\"position:relative;\"><a href=\"#mutations\" aria-label=\"mutations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mutations</h2>\n<p>Lets talk about <code class=\"language-cpptext\">mutation</code>: unlike <code class=\"language-cpptext\">query</code>, a <code class=\"language-cpptext\">mutation</code> is used for writing data instead of reading it. The <code class=\"language-cpptext\">mutation</code> shares the same principles as the <code class=\"language-cpptext\">query</code>: it has <code class=\"language-cpptext\">fields</code> and <code class=\"language-cpptext\">objects</code>, <code class=\"language-cpptext\">arguments</code> and <code class=\"language-cpptext\">variables</code>, <code class=\"language-cpptext\">fragments</code> and operation names, as well as directives and nested objects for the returned result. With mutations you can specify data as fields and objects that should be returned after it \"mutates\" into something acceptable.</p>\n<p>Let's check out the documentation for <code class=\"language-cpptext\">addStar</code> mutation:</p>\n<p>As arguments it accepts <code class=\"language-cpptext\">AddStarInput!</code>. <code class=\"language-cpptext\">AddStarInput</code> needs these as input:</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-cppgraphql\"><code class=\"language-cppgraphql\"><span class=\"token comment\">#Required  Starrable ID to star.</span>\n<span class=\"token attr-name\">starrableId</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">ID</span><span class=\"token operator\">!</span>\n\n<span class=\"token comment\">#Optional unique identifier for the client performing the mutation.</span>\n<span class=\"token attr-name\">clientMutationId</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span></code></pre></div>\n<p>This means you need to have the <code class=\"language-cpptext\">starrableId</code> of the repo that you want to star. To do so, I need to query one such repo:</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-cppgraphql\"><code class=\"language-cppgraphql\"><span class=\"token keyword\">query</span> <span class=\"token definition-query function\">getRepoId</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property-query\">organization</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">login</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"the-road-to-learn-react\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">name</span>\n    <span class=\"token property\">url</span>\n    <span class=\"token property-query\">repository</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"the-road-to-learn-react\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">id</span>\n      <span class=\"token property\">name</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>output:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-cppjson\"><code class=\"language-cppjson\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"data\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"organization\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"The Road to React\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://github.com/the-road-to-learn-react\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"repository\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"MDEwOlJlcG9zaXRvcnk2MzM1MjkwNw==\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"the-road-to-learn-react\"</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>We'll now use the returned ID to create a mutation to like this repo:</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-cppgraphql\"><code class=\"language-cppgraphql\"><span class=\"token keyword\">mutation</span> <span class=\"token definition-mutation function\">starRepoWithID</span><span class=\"token punctuation\">(</span><span class=\"token variable variable-input\">$repoID</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">ID</span><span class=\"token operator\">!</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property-query property-mutation\">addStar</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">input</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token attr-name\">starrableId</span><span class=\"token punctuation\">:</span> <span class=\"token variable variable-input\">$repoID</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token object\">starrable</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">id</span>\n      <span class=\"token property\">viewerHasStarred</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In the mutation above, we have defined return fields as the <code class=\"language-cpptext\">starrable</code> object. We provide this as our query variables:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-cppjson\"><code class=\"language-cppjson\"><span class=\"token punctuation\">{</span> <span class=\"token property\">\"repoID\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"MDEwOlJlcG9zaXRvcnk2MzM1MjkwNw==\"</span> <span class=\"token punctuation\">}</span></code></pre></div>\n<p>output:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-cppjson\"><code class=\"language-cppjson\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"data\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"addStar\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"starrable\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"MDEwOlJlcG9zaXRvcnk2MzM1MjkwNw==\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"viewerHasStarred\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>To un-star, we'll do this:</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-cppgraphql\"><code class=\"language-cppgraphql\"><span class=\"token keyword\">mutation</span> <span class=\"token definition-mutation function\">unStarRepoWithID</span><span class=\"token punctuation\">(</span><span class=\"token variable variable-input\">$repoID</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">ID</span><span class=\"token operator\">!</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property-query property-mutation\">removeStar</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">input</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token attr-name\">starrableId</span><span class=\"token punctuation\">:</span> <span class=\"token variable variable-input\">$repoID</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token object\">starrable</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">viewerHasStarred</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>output:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-cppjson\"><code class=\"language-cppjson\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"data\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"removeStar\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"starrable\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"viewerHasStarred\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"pagination\" style=\"position:relative;\"><a href=\"#pagination\" aria-label=\"pagination permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pagination</h2>\n<p>Imagine you have a list of repositories in your GitHub organization, but you only want to retrieve a few of them to display in your UI. It could take ages to fetch a list of repositories from a large organization. In GraphQL, you can request paginated data by providing arguments to a list field that says how many items you are expecting from the list:</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-cppgraphql\"><code class=\"language-cppgraphql\"><span class=\"token keyword\">query</span> <span class=\"token definition-query function\">OrganizationForLearningReact</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property-query\">organization</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">login</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"the-road-to-learn-react\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">name</span>\n    <span class=\"token property\">url</span>\n    <span class=\"token property-query\">repositories</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">first</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token object\">edges</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token object\">node</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">name</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-cpptext\">first</code> argument is passed to the <code class=\"language-cpptext\">repositories</code> list field that specifies how many items from the list are expected in the result. The query shape doesn’t need to follow the <code class=\"language-cpptext\">edges</code> and <code class=\"language-cpptext\">node</code> structure, but it’s one of a few solutions to define paginated data structures and lists with GraphQL.</p>\n<p>We still need to figure out how to fetch the next two repositories in the list, however. The first result of the query is the first page of the paginated list, the second query result should be the second page.</p>\n<p>Each edge comes with its own cursor field to identify its position in the list:</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-cppgraphql\"><code class=\"language-cppgraphql\"><span class=\"token keyword\">query</span> <span class=\"token definition-query function\">OrganizationForLearningReact</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property-query\">organization</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">login</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"the-road-to-learn-react\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">name</span>\n    <span class=\"token property\">url</span>\n    <span class=\"token property-query\">repositories</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">first</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token object\">edges</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token object\">node</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">name</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token property\">cursor</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>output:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-cppjson\"><code class=\"language-cppjson\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"data\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"organization\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"The Road to React\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://github.com/the-road-to-learn-react\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"repositories\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"edges\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"node\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"the-road-to-learn-react\"</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"cursor\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Y3Vyc29yOnYyOpHOA8awSw==\"</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"node\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"hackernews-client\"</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"cursor\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Y3Vyc29yOnYyOpHOBGhimw==\"</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now, you can use the cursor of the first repository in the list to execute a second query. By using the after argument for the repositories list field, you can specify an entry point to retrieve your next page of paginated data:</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-cppgraphql\"><code class=\"language-cppgraphql\"><span class=\"token keyword\">query</span> <span class=\"token definition-query function\">OrganizationForLearningReact</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property-query\">organization</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">login</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"the-road-to-learn-react\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">name</span>\n    <span class=\"token property\">url</span>\n    <span class=\"token property-query\">repositories</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">first</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token attr-name\">after</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Y3Vyc29yOnYyOpHOA8awSw==\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token object\">edges</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token object\">node</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">name</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token property\">cursor</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In the previous result, only the second item is retrieved, as well as a new third item. The first item isn’t retrieved because you have used its cursor as after argument to retrieve all items after it.</p>","timeToRead":10,"excerpt":"Introduction GraphQL and Github Query Fragments Variables Default Variables Named Queries Nested Objects Directives Mutations Pagination…","frontmatter":{"title":"GraphQL Notes","date":"2021-06-09T00:00:00.000Z","categories":["React"],"extract":"My notes as I learn GraphQL","thumbnail":"/post-images/graphql.png","tags":["blog","React"]},"fields":{"slug":"/graph-ql-notes","date":"June 09, 2021"}}},"pageContext":{"slug":"/graph-ql-notes","nexttitle":"ReactJS Notes","nextslug":"/react-js-notes","prevtitle":"Micro Frontend","prevslug":"/micro-frontend"}},
    "staticQueryHashes": ["3969716136"]}